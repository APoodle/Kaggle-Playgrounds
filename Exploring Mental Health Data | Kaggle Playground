{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e0f900c9",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-11-11T22:02:52.589045Z",
     "iopub.status.busy": "2024-11-11T22:02:52.588584Z",
     "iopub.status.idle": "2024-11-11T22:02:54.808157Z",
     "shell.execute_reply": "2024-11-11T22:02:54.806944Z"
    },
    "papermill": {
     "duration": 2.22937,
     "end_time": "2024-11-11T22:02:54.810782",
     "exception": false,
     "start_time": "2024-11-11T22:02:52.581412",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s4e11/sample_submission.csv\n",
      "/kaggle/input/playground-series-s4e11/train.csv\n",
      "/kaggle/input/playground-series-s4e11/test.csv\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Name</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>City</th>\n",
       "      <th>Working Professional or Student</th>\n",
       "      <th>Profession</th>\n",
       "      <th>Academic Pressure</th>\n",
       "      <th>Work Pressure</th>\n",
       "      <th>CGPA</th>\n",
       "      <th>Study Satisfaction</th>\n",
       "      <th>Job Satisfaction</th>\n",
       "      <th>Sleep Duration</th>\n",
       "      <th>Dietary Habits</th>\n",
       "      <th>Degree</th>\n",
       "      <th>Have you ever had suicidal thoughts ?</th>\n",
       "      <th>Work/Study Hours</th>\n",
       "      <th>Financial Stress</th>\n",
       "      <th>Family History of Mental Illness</th>\n",
       "      <th>Depression</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Aaradhya</td>\n",
       "      <td>Female</td>\n",
       "      <td>49.0</td>\n",
       "      <td>Ludhiana</td>\n",
       "      <td>Working Professional</td>\n",
       "      <td>Chef</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>More than 8 hours</td>\n",
       "      <td>Healthy</td>\n",
       "      <td>BHM</td>\n",
       "      <td>No</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Vivan</td>\n",
       "      <td>Male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>Varanasi</td>\n",
       "      <td>Working Professional</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Less than 5 hours</td>\n",
       "      <td>Unhealthy</td>\n",
       "      <td>LLB</td>\n",
       "      <td>Yes</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Yuvraj</td>\n",
       "      <td>Male</td>\n",
       "      <td>33.0</td>\n",
       "      <td>Visakhapatnam</td>\n",
       "      <td>Student</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8.97</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5-6 hours</td>\n",
       "      <td>Healthy</td>\n",
       "      <td>B.Pharm</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Yuvraj</td>\n",
       "      <td>Male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>Mumbai</td>\n",
       "      <td>Working Professional</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Less than 5 hours</td>\n",
       "      <td>Moderate</td>\n",
       "      <td>BBA</td>\n",
       "      <td>Yes</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Rhea</td>\n",
       "      <td>Female</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Kanpur</td>\n",
       "      <td>Working Professional</td>\n",
       "      <td>Business Analyst</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5-6 hours</td>\n",
       "      <td>Unhealthy</td>\n",
       "      <td>BBA</td>\n",
       "      <td>Yes</td>\n",
       "      <td>9.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140695</th>\n",
       "      <td>140695</td>\n",
       "      <td>Vidya</td>\n",
       "      <td>Female</td>\n",
       "      <td>18.0</td>\n",
       "      <td>Ahmedabad</td>\n",
       "      <td>Working Professional</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5-6 hours</td>\n",
       "      <td>Unhealthy</td>\n",
       "      <td>Class 12</td>\n",
       "      <td>No</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140696</th>\n",
       "      <td>140696</td>\n",
       "      <td>Lata</td>\n",
       "      <td>Female</td>\n",
       "      <td>41.0</td>\n",
       "      <td>Hyderabad</td>\n",
       "      <td>Working Professional</td>\n",
       "      <td>Content Writer</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>7-8 hours</td>\n",
       "      <td>Moderate</td>\n",
       "      <td>B.Tech</td>\n",
       "      <td>Yes</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140697</th>\n",
       "      <td>140697</td>\n",
       "      <td>Aanchal</td>\n",
       "      <td>Female</td>\n",
       "      <td>24.0</td>\n",
       "      <td>Kolkata</td>\n",
       "      <td>Working Professional</td>\n",
       "      <td>Marketing Manager</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>More than 8 hours</td>\n",
       "      <td>Moderate</td>\n",
       "      <td>B.Com</td>\n",
       "      <td>No</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140698</th>\n",
       "      <td>140698</td>\n",
       "      <td>Prachi</td>\n",
       "      <td>Female</td>\n",
       "      <td>49.0</td>\n",
       "      <td>Srinagar</td>\n",
       "      <td>Working Professional</td>\n",
       "      <td>Plumber</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5-6 hours</td>\n",
       "      <td>Moderate</td>\n",
       "      <td>ME</td>\n",
       "      <td>Yes</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140699</th>\n",
       "      <td>140699</td>\n",
       "      <td>Sai</td>\n",
       "      <td>Male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>Patna</td>\n",
       "      <td>Student</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.24</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Less than 5 hours</td>\n",
       "      <td>Healthy</td>\n",
       "      <td>BCA</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>140700 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id      Name  Gender   Age           City  \\\n",
       "0            0  Aaradhya  Female  49.0       Ludhiana   \n",
       "1            1     Vivan    Male  26.0       Varanasi   \n",
       "2            2    Yuvraj    Male  33.0  Visakhapatnam   \n",
       "3            3    Yuvraj    Male  22.0         Mumbai   \n",
       "4            4      Rhea  Female  30.0         Kanpur   \n",
       "...        ...       ...     ...   ...            ...   \n",
       "140695  140695     Vidya  Female  18.0      Ahmedabad   \n",
       "140696  140696      Lata  Female  41.0      Hyderabad   \n",
       "140697  140697   Aanchal  Female  24.0        Kolkata   \n",
       "140698  140698    Prachi  Female  49.0       Srinagar   \n",
       "140699  140699       Sai    Male  27.0          Patna   \n",
       "\n",
       "       Working Professional or Student         Profession  Academic Pressure  \\\n",
       "0                 Working Professional               Chef                NaN   \n",
       "1                 Working Professional            Teacher                NaN   \n",
       "2                              Student                NaN                5.0   \n",
       "3                 Working Professional            Teacher                NaN   \n",
       "4                 Working Professional   Business Analyst                NaN   \n",
       "...                                ...                ...                ...   \n",
       "140695            Working Professional                NaN                NaN   \n",
       "140696            Working Professional     Content Writer                NaN   \n",
       "140697            Working Professional  Marketing Manager                NaN   \n",
       "140698            Working Professional            Plumber                NaN   \n",
       "140699                         Student                NaN                4.0   \n",
       "\n",
       "        Work Pressure  CGPA  Study Satisfaction  Job Satisfaction  \\\n",
       "0                 5.0   NaN                 NaN               2.0   \n",
       "1                 4.0   NaN                 NaN               3.0   \n",
       "2                 NaN  8.97                 2.0               NaN   \n",
       "3                 5.0   NaN                 NaN               1.0   \n",
       "4                 1.0   NaN                 NaN               1.0   \n",
       "...               ...   ...                 ...               ...   \n",
       "140695            5.0   NaN                 NaN               4.0   \n",
       "140696            5.0   NaN                 NaN               4.0   \n",
       "140697            3.0   NaN                 NaN               1.0   \n",
       "140698            5.0   NaN                 NaN               2.0   \n",
       "140699            NaN  9.24                 1.0               NaN   \n",
       "\n",
       "           Sleep Duration Dietary Habits    Degree  \\\n",
       "0       More than 8 hours        Healthy       BHM   \n",
       "1       Less than 5 hours      Unhealthy       LLB   \n",
       "2               5-6 hours        Healthy   B.Pharm   \n",
       "3       Less than 5 hours       Moderate       BBA   \n",
       "4               5-6 hours      Unhealthy       BBA   \n",
       "...                   ...            ...       ...   \n",
       "140695          5-6 hours      Unhealthy  Class 12   \n",
       "140696          7-8 hours       Moderate    B.Tech   \n",
       "140697  More than 8 hours       Moderate     B.Com   \n",
       "140698          5-6 hours       Moderate        ME   \n",
       "140699  Less than 5 hours        Healthy       BCA   \n",
       "\n",
       "       Have you ever had suicidal thoughts ?  Work/Study Hours  \\\n",
       "0                                         No               1.0   \n",
       "1                                        Yes               7.0   \n",
       "2                                        Yes               3.0   \n",
       "3                                        Yes              10.0   \n",
       "4                                        Yes               9.0   \n",
       "...                                      ...               ...   \n",
       "140695                                    No               2.0   \n",
       "140696                                   Yes               6.0   \n",
       "140697                                    No               4.0   \n",
       "140698                                   Yes              10.0   \n",
       "140699                                   Yes               2.0   \n",
       "\n",
       "        Financial Stress Family History of Mental Illness  Depression  \n",
       "0                    2.0                               No           0  \n",
       "1                    3.0                               No           1  \n",
       "2                    1.0                               No           1  \n",
       "3                    1.0                              Yes           1  \n",
       "4                    4.0                              Yes           0  \n",
       "...                  ...                              ...         ...  \n",
       "140695               4.0                              Yes           1  \n",
       "140696               5.0                              Yes           0  \n",
       "140697               4.0                               No           0  \n",
       "140698               1.0                               No           0  \n",
       "140699               3.0                              Yes           1  \n",
       "\n",
       "[140700 rows x 20 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "        \n",
    "train = pd.read_csv('/kaggle/input/playground-series-s4e11/train.csv')\n",
    "test = pd.read_csv('/kaggle/input/playground-series-s4e11/test.csv')\n",
    "\n",
    "train"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b36562dd",
   "metadata": {
    "papermill": {
     "duration": 0.005701,
     "end_time": "2024-11-11T22:02:54.822984",
     "exception": false,
     "start_time": "2024-11-11T22:02:54.817283",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center>Kaggle Playground: Predicting Loan Approval</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0afabc27",
   "metadata": {
    "papermill": {
     "duration": 0.005592,
     "end_time": "2024-11-11T22:02:54.834797",
     "exception": false,
     "start_time": "2024-11-11T22:02:54.829205",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### <center>Your goal is to use data from a mental health survey to explore factors that may cause individuals to experience depression.</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "24f83f2a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-11T22:02:54.848553Z",
     "iopub.status.busy": "2024-11-11T22:02:54.847935Z",
     "iopub.status.idle": "2024-11-11T22:02:54.858017Z",
     "shell.execute_reply": "2024-11-11T22:02:54.856793Z"
    },
    "papermill": {
     "duration": 0.01978,
     "end_time": "2024-11-11T22:02:54.860452",
     "exception": false,
     "start_time": "2024-11-11T22:02:54.840672",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                                         int64\n",
       "Name                                      object\n",
       "Gender                                    object\n",
       "Age                                      float64\n",
       "City                                      object\n",
       "Working Professional or Student           object\n",
       "Profession                                object\n",
       "Academic Pressure                        float64\n",
       "Work Pressure                            float64\n",
       "CGPA                                     float64\n",
       "Study Satisfaction                       float64\n",
       "Job Satisfaction                         float64\n",
       "Sleep Duration                            object\n",
       "Dietary Habits                            object\n",
       "Degree                                    object\n",
       "Have you ever had suicidal thoughts ?     object\n",
       "Work/Study Hours                         float64\n",
       "Financial Stress                         float64\n",
       "Family History of Mental Illness          object\n",
       "Depression                                 int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5bbc1159",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-11T22:02:54.874433Z",
     "iopub.status.busy": "2024-11-11T22:02:54.873904Z",
     "iopub.status.idle": "2024-11-11T22:02:56.356066Z",
     "shell.execute_reply": "2024-11-11T22:02:56.354792Z"
    },
    "papermill": {
     "duration": 1.492634,
     "end_time": "2024-11-11T22:02:56.359121",
     "exception": false,
     "start_time": "2024-11-11T22:02:54.866487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X = train.drop(['Name', 'Depression', 'id'], axis=1)\n",
    "y = train['Depression']\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=10, test_size=.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "767b3a1c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-11T22:02:56.373365Z",
     "iopub.status.busy": "2024-11-11T22:02:56.372716Z",
     "iopub.status.idle": "2024-11-11T22:02:58.015338Z",
     "shell.execute_reply": "2024-11-11T22:02:58.014056Z"
    },
    "papermill": {
     "duration": 1.652976,
     "end_time": "2024-11-11T22:02:58.018089",
     "exception": false,
     "start_time": "2024-11-11T22:02:56.365113",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-1.93863243e-01, -4.25971150e-02, -8.07451397e-06, ...,\n",
       "         6.70000000e+01,  0.00000000e+00,  1.00000000e+00],\n",
       "       [-1.40581620e+00, -4.25971150e-02,  1.59050965e+00, ...,\n",
       "         1.60000000e+01,  1.00000000e+00,  0.00000000e+00],\n",
       "       [ 1.58366764e+00, -4.25971150e-02, -8.07451397e-06, ...,\n",
       "         6.00000000e+01,  0.00000000e+00,  0.00000000e+00],\n",
       "       ...,\n",
       "       [ 1.01808965e+00, -4.25971150e-02,  7.95250833e-01, ...,\n",
       "         1.60000000e+01,  0.00000000e+00,  0.00000000e+00],\n",
       "       [ 5.33308506e-01, -4.25971150e-02,  7.95250833e-01, ...,\n",
       "         6.40000000e+01,  0.00000000e+00,  0.00000000e+00],\n",
       "       [ 1.17968333e+00, -4.25971150e-02,  1.59050965e+00, ...,\n",
       "         2.70000000e+01,  1.00000000e+00,  0.00000000e+00]])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.impute import SimpleImputer\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.preprocessing import StandardScaler, OrdinalEncoder, FunctionTransformer\n",
    "\n",
    "# Select numerical and categorical columns\n",
    "numerical_columns = X_train.select_dtypes(exclude=['object']).columns.tolist()  # Now it's a list\n",
    "categorical_columns = X_train.select_dtypes(include=['object']).columns\n",
    "\n",
    "# Define numerical pipeline\n",
    "numerical_pipeline = Pipeline(steps=[\n",
    "    ('imputer', SimpleImputer(strategy='median')),\n",
    "    ('scaler', StandardScaler()),\n",
    "    ('convert_to_float32', FunctionTransformer(lambda x: x.astype(np.float32)))\n",
    "])\n",
    "\n",
    "# Define categorical pipeline\n",
    "categorical_pipeline = Pipeline(steps=[\n",
    "    ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),\n",
    "    ('ordinal', OrdinalEncoder(dtype=np.int32, handle_unknown='use_encoded_value', unknown_value=-1))\n",
    "])\n",
    "\n",
    "# Create the ColumnTransformer with both pipelines\n",
    "preprocessor = ColumnTransformer(\n",
    "    transformers=[\n",
    "        ('num', numerical_pipeline, numerical_columns),\n",
    "        ('cat', categorical_pipeline, categorical_columns)\n",
    "    ]\n",
    ")\n",
    "\n",
    "# Fit and transform the data\n",
    "X_train_preprocessed = preprocessor.fit_transform(X_train)\n",
    "X_test_preprocessed = preprocessor.transform(X_test)\n",
    "test_preprocessed = preprocessor.transform(test)\n",
    "\n",
    "X_train_preprocessed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9493ecf2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-11T22:02:58.033162Z",
     "iopub.status.busy": "2024-11-11T22:02:58.032099Z",
     "iopub.status.idle": "2024-11-11T22:02:59.927350Z",
     "shell.execute_reply": "2024-11-11T22:02:59.926219Z"
    },
    "papermill": {
     "duration": 1.905919,
     "end_time": "2024-11-11T22:02:59.930378",
     "exception": false,
     "start_time": "2024-11-11T22:02:58.024459",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  0.9393745557924662\n"
     ]
    }
   ],
   "source": [
    "from sklearn import ensemble\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "hg = ensemble.HistGradientBoostingClassifier()\n",
    "model = hg.fit(X_train_preprocessed, y_train)\n",
    "\n",
    "predictions = model.predict(X_test_preprocessed)\n",
    "\n",
    "print('Accuracy: ', accuracy_score(y_test, predictions))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d91a6b29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-11T22:02:59.945221Z",
     "iopub.status.busy": "2024-11-11T22:02:59.944779Z",
     "iopub.status.idle": "2024-11-11T22:03:00.418907Z",
     "shell.execute_reply": "2024-11-11T22:03:00.417578Z"
    },
    "papermill": {
     "duration": 0.484638,
     "end_time": "2024-11-11T22:03:00.421678",
     "exception": false,
     "start_time": "2024-11-11T22:02:59.937040",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Depression</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>140700</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>140701</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>140702</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>140703</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>140704</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93795</th>\n",
       "      <td>234495</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93796</th>\n",
       "      <td>234496</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93797</th>\n",
       "      <td>234497</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93798</th>\n",
       "      <td>234498</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93799</th>\n",
       "      <td>234499</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>93800 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id  Depression\n",
       "0      140700           0\n",
       "1      140701           0\n",
       "2      140702           0\n",
       "3      140703           1\n",
       "4      140704           0\n",
       "...       ...         ...\n",
       "93795  234495           0\n",
       "93796  234496           1\n",
       "93797  234497           0\n",
       "93798  234498           1\n",
       "93799  234499           0\n",
       "\n",
       "[93800 rows x 2 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sublesson = pd.DataFrame()\n",
    "sublesson['id'] = test.id\n",
    "\n",
    "predictions = model.predict(test_preprocessed)\n",
    "\n",
    "sublesson['Depression'] = predictions\n",
    "sublesson.to_csv('PS_S4E11.csv', index=False)\n",
    "\n",
    "sublesson"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "765d1f7e",
   "metadata": {
    "papermill": {
     "duration": 0.00612,
     "end_time": "2024-11-11T22:03:00.434299",
     "exception": false,
     "start_time": "2024-11-11T22:03:00.428179",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Public Score: 0.92569"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9f6bb869",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-11T22:03:00.449368Z",
     "iopub.status.busy": "2024-11-11T22:03:00.448490Z",
     "iopub.status.idle": "2024-11-11T22:03:14.396110Z",
     "shell.execute_reply": "2024-11-11T22:03:14.394970Z"
    },
    "papermill": {
     "duration": 13.958591,
     "end_time": "2024-11-11T22:03:14.399272",
     "exception": false,
     "start_time": "2024-11-11T22:03:00.440681",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\tvalidation_0-logloss:0.45540\n",
      "[1]\tvalidation_0-logloss:0.43440\n",
      "[2]\tvalidation_0-logloss:0.41596\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[3]\tvalidation_0-logloss:0.39969\n",
      "[4]\tvalidation_0-logloss:0.38508\n",
      "[5]\tvalidation_0-logloss:0.37183\n",
      "[6]\tvalidation_0-logloss:0.35974\n",
      "[7]\tvalidation_0-logloss:0.34879\n",
      "[8]\tvalidation_0-logloss:0.33875\n",
      "[9]\tvalidation_0-logloss:0.32953\n",
      "[10]\tvalidation_0-logloss:0.32099\n",
      "[11]\tvalidation_0-logloss:0.31308\n",
      "[12]\tvalidation_0-logloss:0.30579\n",
      "[13]\tvalidation_0-logloss:0.29903\n",
      "[14]\tvalidation_0-logloss:0.29266\n",
      "[15]\tvalidation_0-logloss:0.28678\n",
      "[16]\tvalidation_0-logloss:0.28110\n",
      "[17]\tvalidation_0-logloss:0.27597\n",
      "[18]\tvalidation_0-logloss:0.27099\n",
      "[19]\tvalidation_0-logloss:0.26647\n",
      "[20]\tvalidation_0-logloss:0.26210\n",
      "[21]\tvalidation_0-logloss:0.25793\n",
      "[22]\tvalidation_0-logloss:0.25423\n",
      "[23]\tvalidation_0-logloss:0.25045\n",
      "[24]\tvalidation_0-logloss:0.24700\n",
      "[25]\tvalidation_0-logloss:0.24385\n",
      "[26]\tvalidation_0-logloss:0.24080\n",
      "[27]\tvalidation_0-logloss:0.23789\n",
      "[28]\tvalidation_0-logloss:0.23473\n",
      "[29]\tvalidation_0-logloss:0.23215\n",
      "[30]\tvalidation_0-logloss:0.22970\n",
      "[31]\tvalidation_0-logloss:0.22695\n",
      "[32]\tvalidation_0-logloss:0.22469\n",
      "[33]\tvalidation_0-logloss:0.22223\n",
      "[34]\tvalidation_0-logloss:0.22024\n",
      "[35]\tvalidation_0-logloss:0.21827\n",
      "[36]\tvalidation_0-logloss:0.21611\n",
      "[37]\tvalidation_0-logloss:0.21435\n",
      "[38]\tvalidation_0-logloss:0.21266\n",
      "[39]\tvalidation_0-logloss:0.21104\n",
      "[40]\tvalidation_0-logloss:0.20918\n",
      "[41]\tvalidation_0-logloss:0.20766\n",
      "[42]\tvalidation_0-logloss:0.20626\n",
      "[43]\tvalidation_0-logloss:0.20461\n",
      "[44]\tvalidation_0-logloss:0.20330\n",
      "[45]\tvalidation_0-logloss:0.20203\n",
      "[46]\tvalidation_0-logloss:0.20083\n",
      "[47]\tvalidation_0-logloss:0.19959\n",
      "[48]\tvalidation_0-logloss:0.19845\n",
      "[49]\tvalidation_0-logloss:0.19735\n",
      "[50]\tvalidation_0-logloss:0.19607\n",
      "[51]\tvalidation_0-logloss:0.19504\n",
      "[52]\tvalidation_0-logloss:0.19410\n",
      "[53]\tvalidation_0-logloss:0.19308\n",
      "[54]\tvalidation_0-logloss:0.19217\n",
      "[55]\tvalidation_0-logloss:0.19121\n",
      "[56]\tvalidation_0-logloss:0.19027\n",
      "[57]\tvalidation_0-logloss:0.18945\n",
      "[58]\tvalidation_0-logloss:0.18862\n",
      "[59]\tvalidation_0-logloss:0.18779\n",
      "[60]\tvalidation_0-logloss:0.18703\n",
      "[61]\tvalidation_0-logloss:0.18630\n",
      "[62]\tvalidation_0-logloss:0.18560\n",
      "[63]\tvalidation_0-logloss:0.18481\n",
      "[64]\tvalidation_0-logloss:0.18411\n",
      "[65]\tvalidation_0-logloss:0.18347\n",
      "[66]\tvalidation_0-logloss:0.18278\n",
      "[67]\tvalidation_0-logloss:0.18216\n",
      "[68]\tvalidation_0-logloss:0.18157\n",
      "[69]\tvalidation_0-logloss:0.18084\n",
      "[70]\tvalidation_0-logloss:0.18019\n",
      "[71]\tvalidation_0-logloss:0.17963\n",
      "[72]\tvalidation_0-logloss:0.17908\n",
      "[73]\tvalidation_0-logloss:0.17854\n",
      "[74]\tvalidation_0-logloss:0.17802\n",
      "[75]\tvalidation_0-logloss:0.17752\n",
      "[76]\tvalidation_0-logloss:0.17697\n",
      "[77]\tvalidation_0-logloss:0.17649\n",
      "[78]\tvalidation_0-logloss:0.17587\n",
      "[79]\tvalidation_0-logloss:0.17540\n",
      "[80]\tvalidation_0-logloss:0.17497\n",
      "[81]\tvalidation_0-logloss:0.17450\n",
      "[82]\tvalidation_0-logloss:0.17398\n",
      "[83]\tvalidation_0-logloss:0.17355\n",
      "[84]\tvalidation_0-logloss:0.17310\n",
      "[85]\tvalidation_0-logloss:0.17271\n",
      "[86]\tvalidation_0-logloss:0.17231\n",
      "[87]\tvalidation_0-logloss:0.17194\n",
      "[88]\tvalidation_0-logloss:0.17157\n",
      "[89]\tvalidation_0-logloss:0.17123\n",
      "[90]\tvalidation_0-logloss:0.17088\n",
      "[91]\tvalidation_0-logloss:0.17054\n",
      "[92]\tvalidation_0-logloss:0.17022\n",
      "[93]\tvalidation_0-logloss:0.16988\n",
      "[94]\tvalidation_0-logloss:0.16955\n",
      "[95]\tvalidation_0-logloss:0.16921\n",
      "[96]\tvalidation_0-logloss:0.16894\n",
      "[97]\tvalidation_0-logloss:0.16863\n",
      "[98]\tvalidation_0-logloss:0.16834\n",
      "[99]\tvalidation_0-logloss:0.16798\n",
      "[100]\tvalidation_0-logloss:0.16766\n",
      "[101]\tvalidation_0-logloss:0.16737\n",
      "[102]\tvalidation_0-logloss:0.16707\n",
      "[103]\tvalidation_0-logloss:0.16680\n",
      "[104]\tvalidation_0-logloss:0.16655\n",
      "[105]\tvalidation_0-logloss:0.16630\n",
      "[106]\tvalidation_0-logloss:0.16603\n",
      "[107]\tvalidation_0-logloss:0.16577\n",
      "[108]\tvalidation_0-logloss:0.16549\n",
      "[109]\tvalidation_0-logloss:0.16527\n",
      "[110]\tvalidation_0-logloss:0.16505\n",
      "[111]\tvalidation_0-logloss:0.16483\n",
      "[112]\tvalidation_0-logloss:0.16456\n",
      "[113]\tvalidation_0-logloss:0.16434\n",
      "[114]\tvalidation_0-logloss:0.16414\n",
      "[115]\tvalidation_0-logloss:0.16390\n",
      "[116]\tvalidation_0-logloss:0.16370\n",
      "[117]\tvalidation_0-logloss:0.16350\n",
      "[118]\tvalidation_0-logloss:0.16332\n",
      "[119]\tvalidation_0-logloss:0.16315\n",
      "[120]\tvalidation_0-logloss:0.16295\n",
      "[121]\tvalidation_0-logloss:0.16270\n",
      "[122]\tvalidation_0-logloss:0.16249\n",
      "[123]\tvalidation_0-logloss:0.16232\n",
      "[124]\tvalidation_0-logloss:0.16212\n",
      "[125]\tvalidation_0-logloss:0.16195\n",
      "[126]\tvalidation_0-logloss:0.16174\n",
      "[127]\tvalidation_0-logloss:0.16156\n",
      "[128]\tvalidation_0-logloss:0.16142\n",
      "[129]\tvalidation_0-logloss:0.16128\n",
      "[130]\tvalidation_0-logloss:0.16109\n",
      "[131]\tvalidation_0-logloss:0.16089\n",
      "[132]\tvalidation_0-logloss:0.16074\n",
      "[133]\tvalidation_0-logloss:0.16060\n",
      "[134]\tvalidation_0-logloss:0.16045\n",
      "[135]\tvalidation_0-logloss:0.16032\n",
      "[136]\tvalidation_0-logloss:0.16018\n",
      "[137]\tvalidation_0-logloss:0.16005\n",
      "[138]\tvalidation_0-logloss:0.15992\n",
      "[139]\tvalidation_0-logloss:0.15977\n",
      "[140]\tvalidation_0-logloss:0.15963\n",
      "[141]\tvalidation_0-logloss:0.15950\n",
      "[142]\tvalidation_0-logloss:0.15938\n",
      "[143]\tvalidation_0-logloss:0.15927\n",
      "[144]\tvalidation_0-logloss:0.15915\n",
      "[145]\tvalidation_0-logloss:0.15904\n",
      "[146]\tvalidation_0-logloss:0.15891\n",
      "[147]\tvalidation_0-logloss:0.15879\n",
      "[148]\tvalidation_0-logloss:0.15869\n",
      "[149]\tvalidation_0-logloss:0.15853\n",
      "[150]\tvalidation_0-logloss:0.15841\n",
      "[151]\tvalidation_0-logloss:0.15830\n",
      "[152]\tvalidation_0-logloss:0.15821\n",
      "[153]\tvalidation_0-logloss:0.15812\n",
      "[154]\tvalidation_0-logloss:0.15802\n",
      "[155]\tvalidation_0-logloss:0.15791\n",
      "[156]\tvalidation_0-logloss:0.15782\n",
      "[157]\tvalidation_0-logloss:0.15770\n",
      "[158]\tvalidation_0-logloss:0.15760\n",
      "[159]\tvalidation_0-logloss:0.15749\n",
      "[160]\tvalidation_0-logloss:0.15740\n",
      "[161]\tvalidation_0-logloss:0.15732\n",
      "[162]\tvalidation_0-logloss:0.15723\n",
      "[163]\tvalidation_0-logloss:0.15715\n",
      "[164]\tvalidation_0-logloss:0.15706\n",
      "[165]\tvalidation_0-logloss:0.15700\n",
      "[166]\tvalidation_0-logloss:0.15689\n",
      "[167]\tvalidation_0-logloss:0.15681\n",
      "[168]\tvalidation_0-logloss:0.15672\n",
      "[169]\tvalidation_0-logloss:0.15664\n",
      "[170]\tvalidation_0-logloss:0.15656\n",
      "[171]\tvalidation_0-logloss:0.15648\n",
      "[172]\tvalidation_0-logloss:0.15639\n",
      "[173]\tvalidation_0-logloss:0.15630\n",
      "[174]\tvalidation_0-logloss:0.15622\n",
      "[175]\tvalidation_0-logloss:0.15616\n",
      "[176]\tvalidation_0-logloss:0.15609\n",
      "[177]\tvalidation_0-logloss:0.15602\n",
      "[178]\tvalidation_0-logloss:0.15594\n",
      "[179]\tvalidation_0-logloss:0.15587\n",
      "[180]\tvalidation_0-logloss:0.15580\n",
      "[181]\tvalidation_0-logloss:0.15574\n",
      "[182]\tvalidation_0-logloss:0.15567\n",
      "[183]\tvalidation_0-logloss:0.15561\n",
      "[184]\tvalidation_0-logloss:0.15554\n",
      "[185]\tvalidation_0-logloss:0.15542\n",
      "[186]\tvalidation_0-logloss:0.15537\n",
      "[187]\tvalidation_0-logloss:0.15532\n",
      "[188]\tvalidation_0-logloss:0.15525\n",
      "[189]\tvalidation_0-logloss:0.15518\n",
      "[190]\tvalidation_0-logloss:0.15512\n",
      "[191]\tvalidation_0-logloss:0.15504\n",
      "[192]\tvalidation_0-logloss:0.15499\n",
      "[193]\tvalidation_0-logloss:0.15490\n",
      "[194]\tvalidation_0-logloss:0.15484\n",
      "[195]\tvalidation_0-logloss:0.15480\n",
      "[196]\tvalidation_0-logloss:0.15474\n",
      "[197]\tvalidation_0-logloss:0.15470\n",
      "[198]\tvalidation_0-logloss:0.15465\n",
      "[199]\tvalidation_0-logloss:0.15459\n",
      "[200]\tvalidation_0-logloss:0.15451\n",
      "[201]\tvalidation_0-logloss:0.15446\n",
      "[202]\tvalidation_0-logloss:0.15443\n",
      "[203]\tvalidation_0-logloss:0.15437\n",
      "[204]\tvalidation_0-logloss:0.15433\n",
      "[205]\tvalidation_0-logloss:0.15429\n",
      "[206]\tvalidation_0-logloss:0.15422\n",
      "[207]\tvalidation_0-logloss:0.15419\n",
      "[208]\tvalidation_0-logloss:0.15414\n",
      "[209]\tvalidation_0-logloss:0.15410\n",
      "[210]\tvalidation_0-logloss:0.15405\n",
      "[211]\tvalidation_0-logloss:0.15398\n",
      "[212]\tvalidation_0-logloss:0.15395\n",
      "[213]\tvalidation_0-logloss:0.15391\n",
      "[214]\tvalidation_0-logloss:0.15386\n",
      "[215]\tvalidation_0-logloss:0.15382\n",
      "[216]\tvalidation_0-logloss:0.15378\n",
      "[217]\tvalidation_0-logloss:0.15373\n",
      "[218]\tvalidation_0-logloss:0.15367\n",
      "[219]\tvalidation_0-logloss:0.15364\n",
      "[220]\tvalidation_0-logloss:0.15359\n",
      "[221]\tvalidation_0-logloss:0.15355\n",
      "[222]\tvalidation_0-logloss:0.15353\n",
      "[223]\tvalidation_0-logloss:0.15348\n",
      "[224]\tvalidation_0-logloss:0.15344\n",
      "[225]\tvalidation_0-logloss:0.15339\n",
      "[226]\tvalidation_0-logloss:0.15335\n",
      "[227]\tvalidation_0-logloss:0.15332\n",
      "[228]\tvalidation_0-logloss:0.15328\n",
      "[229]\tvalidation_0-logloss:0.15324\n",
      "[230]\tvalidation_0-logloss:0.15320\n",
      "[231]\tvalidation_0-logloss:0.15316\n",
      "[232]\tvalidation_0-logloss:0.15313\n",
      "[233]\tvalidation_0-logloss:0.15310\n",
      "[234]\tvalidation_0-logloss:0.15308\n",
      "[235]\tvalidation_0-logloss:0.15306\n",
      "[236]\tvalidation_0-logloss:0.15304\n",
      "[237]\tvalidation_0-logloss:0.15300\n",
      "[238]\tvalidation_0-logloss:0.15297\n",
      "[239]\tvalidation_0-logloss:0.15294\n",
      "[240]\tvalidation_0-logloss:0.15290\n",
      "[241]\tvalidation_0-logloss:0.15288\n",
      "[242]\tvalidation_0-logloss:0.15285\n",
      "[243]\tvalidation_0-logloss:0.15280\n",
      "[244]\tvalidation_0-logloss:0.15276\n",
      "[245]\tvalidation_0-logloss:0.15273\n",
      "[246]\tvalidation_0-logloss:0.15271\n",
      "[247]\tvalidation_0-logloss:0.15267\n",
      "[248]\tvalidation_0-logloss:0.15265\n",
      "[249]\tvalidation_0-logloss:0.15263\n",
      "[250]\tvalidation_0-logloss:0.15259\n",
      "[251]\tvalidation_0-logloss:0.15257\n",
      "[252]\tvalidation_0-logloss:0.15256\n",
      "[253]\tvalidation_0-logloss:0.15253\n",
      "[254]\tvalidation_0-logloss:0.15250\n",
      "[255]\tvalidation_0-logloss:0.15247\n",
      "[256]\tvalidation_0-logloss:0.15244\n",
      "[257]\tvalidation_0-logloss:0.15241\n",
      "[258]\tvalidation_0-logloss:0.15238\n",
      "[259]\tvalidation_0-logloss:0.15236\n",
      "[260]\tvalidation_0-logloss:0.15231\n",
      "[261]\tvalidation_0-logloss:0.15228\n",
      "[262]\tvalidation_0-logloss:0.15225\n",
      "[263]\tvalidation_0-logloss:0.15223\n",
      "[264]\tvalidation_0-logloss:0.15221\n",
      "[265]\tvalidation_0-logloss:0.15219\n",
      "[266]\tvalidation_0-logloss:0.15214\n",
      "[267]\tvalidation_0-logloss:0.15212\n",
      "[268]\tvalidation_0-logloss:0.15210\n",
      "[269]\tvalidation_0-logloss:0.15209\n",
      "[270]\tvalidation_0-logloss:0.15207\n",
      "[271]\tvalidation_0-logloss:0.15204\n",
      "[272]\tvalidation_0-logloss:0.15201\n",
      "[273]\tvalidation_0-logloss:0.15199\n",
      "[274]\tvalidation_0-logloss:0.15197\n",
      "[275]\tvalidation_0-logloss:0.15194\n",
      "[276]\tvalidation_0-logloss:0.15192\n",
      "[277]\tvalidation_0-logloss:0.15190\n",
      "[278]\tvalidation_0-logloss:0.15188\n",
      "[279]\tvalidation_0-logloss:0.15185\n",
      "[280]\tvalidation_0-logloss:0.15183\n",
      "[281]\tvalidation_0-logloss:0.15181\n",
      "[282]\tvalidation_0-logloss:0.15178\n",
      "[283]\tvalidation_0-logloss:0.15176\n",
      "[284]\tvalidation_0-logloss:0.15172\n",
      "[285]\tvalidation_0-logloss:0.15170\n",
      "[286]\tvalidation_0-logloss:0.15168\n",
      "[287]\tvalidation_0-logloss:0.15167\n",
      "[288]\tvalidation_0-logloss:0.15164\n",
      "[289]\tvalidation_0-logloss:0.15163\n",
      "[290]\tvalidation_0-logloss:0.15162\n",
      "[291]\tvalidation_0-logloss:0.15161\n",
      "[292]\tvalidation_0-logloss:0.15160\n",
      "[293]\tvalidation_0-logloss:0.15158\n",
      "[294]\tvalidation_0-logloss:0.15156\n",
      "[295]\tvalidation_0-logloss:0.15155\n",
      "[296]\tvalidation_0-logloss:0.15152\n",
      "[297]\tvalidation_0-logloss:0.15148\n",
      "[298]\tvalidation_0-logloss:0.15147\n",
      "[299]\tvalidation_0-logloss:0.15145\n",
      "[300]\tvalidation_0-logloss:0.15144\n",
      "[301]\tvalidation_0-logloss:0.15142\n",
      "[302]\tvalidation_0-logloss:0.15140\n",
      "[303]\tvalidation_0-logloss:0.15137\n",
      "[304]\tvalidation_0-logloss:0.15137\n",
      "[305]\tvalidation_0-logloss:0.15136\n",
      "[306]\tvalidation_0-logloss:0.15134\n",
      "[307]\tvalidation_0-logloss:0.15132\n",
      "[308]\tvalidation_0-logloss:0.15129\n",
      "[309]\tvalidation_0-logloss:0.15127\n",
      "[310]\tvalidation_0-logloss:0.15126\n",
      "[311]\tvalidation_0-logloss:0.15124\n",
      "[312]\tvalidation_0-logloss:0.15123\n",
      "[313]\tvalidation_0-logloss:0.15121\n",
      "[314]\tvalidation_0-logloss:0.15118\n",
      "[315]\tvalidation_0-logloss:0.15117\n",
      "[316]\tvalidation_0-logloss:0.15115\n",
      "[317]\tvalidation_0-logloss:0.15113\n",
      "[318]\tvalidation_0-logloss:0.15112\n",
      "[319]\tvalidation_0-logloss:0.15111\n",
      "[320]\tvalidation_0-logloss:0.15108\n",
      "[321]\tvalidation_0-logloss:0.15107\n",
      "[322]\tvalidation_0-logloss:0.15106\n",
      "[323]\tvalidation_0-logloss:0.15104\n",
      "[324]\tvalidation_0-logloss:0.15103\n",
      "[325]\tvalidation_0-logloss:0.15102\n",
      "[326]\tvalidation_0-logloss:0.15102\n",
      "[327]\tvalidation_0-logloss:0.15100\n",
      "[328]\tvalidation_0-logloss:0.15098\n",
      "[329]\tvalidation_0-logloss:0.15095\n",
      "[330]\tvalidation_0-logloss:0.15095\n",
      "[331]\tvalidation_0-logloss:0.15094\n",
      "[332]\tvalidation_0-logloss:0.15092\n",
      "[333]\tvalidation_0-logloss:0.15091\n",
      "[334]\tvalidation_0-logloss:0.15090\n",
      "[335]\tvalidation_0-logloss:0.15089\n",
      "[336]\tvalidation_0-logloss:0.15087\n",
      "[337]\tvalidation_0-logloss:0.15085\n",
      "[338]\tvalidation_0-logloss:0.15083\n",
      "[339]\tvalidation_0-logloss:0.15082\n",
      "[340]\tvalidation_0-logloss:0.15080\n",
      "[341]\tvalidation_0-logloss:0.15079\n",
      "[342]\tvalidation_0-logloss:0.15078\n",
      "[343]\tvalidation_0-logloss:0.15077\n",
      "[344]\tvalidation_0-logloss:0.15076\n",
      "[345]\tvalidation_0-logloss:0.15076\n",
      "[346]\tvalidation_0-logloss:0.15074\n",
      "[347]\tvalidation_0-logloss:0.15070\n",
      "[348]\tvalidation_0-logloss:0.15070\n",
      "[349]\tvalidation_0-logloss:0.15069\n",
      "[350]\tvalidation_0-logloss:0.15068\n",
      "[351]\tvalidation_0-logloss:0.15067\n",
      "[352]\tvalidation_0-logloss:0.15065\n",
      "[353]\tvalidation_0-logloss:0.15062\n",
      "[354]\tvalidation_0-logloss:0.15061\n",
      "[355]\tvalidation_0-logloss:0.15061\n",
      "[356]\tvalidation_0-logloss:0.15060\n",
      "[357]\tvalidation_0-logloss:0.15059\n",
      "[358]\tvalidation_0-logloss:0.15059\n",
      "[359]\tvalidation_0-logloss:0.15057\n",
      "[360]\tvalidation_0-logloss:0.15057\n",
      "[361]\tvalidation_0-logloss:0.15056\n",
      "[362]\tvalidation_0-logloss:0.15055\n",
      "[363]\tvalidation_0-logloss:0.15053\n",
      "[364]\tvalidation_0-logloss:0.15051\n",
      "[365]\tvalidation_0-logloss:0.15049\n",
      "[366]\tvalidation_0-logloss:0.15048\n",
      "[367]\tvalidation_0-logloss:0.15047\n",
      "[368]\tvalidation_0-logloss:0.15046\n",
      "[369]\tvalidation_0-logloss:0.15044\n",
      "[370]\tvalidation_0-logloss:0.15044\n",
      "[371]\tvalidation_0-logloss:0.15043\n",
      "[372]\tvalidation_0-logloss:0.15042\n",
      "[373]\tvalidation_0-logloss:0.15041\n",
      "[374]\tvalidation_0-logloss:0.15040\n",
      "[375]\tvalidation_0-logloss:0.15040\n",
      "[376]\tvalidation_0-logloss:0.15038\n",
      "[377]\tvalidation_0-logloss:0.15039\n",
      "[378]\tvalidation_0-logloss:0.15038\n",
      "[379]\tvalidation_0-logloss:0.15038\n",
      "[380]\tvalidation_0-logloss:0.15036\n",
      "[381]\tvalidation_0-logloss:0.15033\n",
      "[382]\tvalidation_0-logloss:0.15031\n",
      "[383]\tvalidation_0-logloss:0.15029\n",
      "[384]\tvalidation_0-logloss:0.15029\n",
      "[385]\tvalidation_0-logloss:0.15028\n",
      "[386]\tvalidation_0-logloss:0.15027\n",
      "[387]\tvalidation_0-logloss:0.15026\n",
      "[388]\tvalidation_0-logloss:0.15023\n",
      "[389]\tvalidation_0-logloss:0.15022\n",
      "[390]\tvalidation_0-logloss:0.15022\n",
      "[391]\tvalidation_0-logloss:0.15022\n",
      "[392]\tvalidation_0-logloss:0.15020\n",
      "[393]\tvalidation_0-logloss:0.15020\n",
      "[394]\tvalidation_0-logloss:0.15020\n",
      "[395]\tvalidation_0-logloss:0.15018\n",
      "[396]\tvalidation_0-logloss:0.15018\n",
      "[397]\tvalidation_0-logloss:0.15016\n",
      "[398]\tvalidation_0-logloss:0.15015\n",
      "[399]\tvalidation_0-logloss:0.15015\n",
      "[400]\tvalidation_0-logloss:0.15015\n",
      "[401]\tvalidation_0-logloss:0.15012\n",
      "[402]\tvalidation_0-logloss:0.15009\n",
      "[403]\tvalidation_0-logloss:0.15009\n",
      "[404]\tvalidation_0-logloss:0.15008\n",
      "[405]\tvalidation_0-logloss:0.15007\n",
      "[406]\tvalidation_0-logloss:0.15006\n",
      "[407]\tvalidation_0-logloss:0.15004\n",
      "[408]\tvalidation_0-logloss:0.15003\n",
      "[409]\tvalidation_0-logloss:0.15003\n",
      "[410]\tvalidation_0-logloss:0.15001\n",
      "[411]\tvalidation_0-logloss:0.15001\n",
      "[412]\tvalidation_0-logloss:0.15000\n",
      "[413]\tvalidation_0-logloss:0.14999\n",
      "[414]\tvalidation_0-logloss:0.14999\n",
      "[415]\tvalidation_0-logloss:0.14998\n",
      "[416]\tvalidation_0-logloss:0.14995\n",
      "[417]\tvalidation_0-logloss:0.14994\n",
      "[418]\tvalidation_0-logloss:0.14995\n",
      "[419]\tvalidation_0-logloss:0.14995\n",
      "[420]\tvalidation_0-logloss:0.14994\n",
      "[421]\tvalidation_0-logloss:0.14994\n",
      "[422]\tvalidation_0-logloss:0.14992\n",
      "[423]\tvalidation_0-logloss:0.14992\n",
      "[424]\tvalidation_0-logloss:0.14990\n",
      "[425]\tvalidation_0-logloss:0.14990\n",
      "[426]\tvalidation_0-logloss:0.14988\n",
      "[427]\tvalidation_0-logloss:0.14987\n",
      "[428]\tvalidation_0-logloss:0.14986\n",
      "[429]\tvalidation_0-logloss:0.14986\n",
      "[430]\tvalidation_0-logloss:0.14986\n",
      "[431]\tvalidation_0-logloss:0.14983\n",
      "[432]\tvalidation_0-logloss:0.14982\n",
      "[433]\tvalidation_0-logloss:0.14981\n",
      "[434]\tvalidation_0-logloss:0.14978\n",
      "[435]\tvalidation_0-logloss:0.14978\n",
      "[436]\tvalidation_0-logloss:0.14977\n",
      "[437]\tvalidation_0-logloss:0.14976\n",
      "[438]\tvalidation_0-logloss:0.14976\n",
      "[439]\tvalidation_0-logloss:0.14976\n",
      "[440]\tvalidation_0-logloss:0.14975\n",
      "[441]\tvalidation_0-logloss:0.14975\n",
      "[442]\tvalidation_0-logloss:0.14972\n",
      "[443]\tvalidation_0-logloss:0.14972\n",
      "[444]\tvalidation_0-logloss:0.14969\n",
      "[445]\tvalidation_0-logloss:0.14969\n",
      "[446]\tvalidation_0-logloss:0.14968\n",
      "[447]\tvalidation_0-logloss:0.14968\n",
      "[448]\tvalidation_0-logloss:0.14966\n",
      "[449]\tvalidation_0-logloss:0.14966\n",
      "[450]\tvalidation_0-logloss:0.14965\n",
      "[451]\tvalidation_0-logloss:0.14964\n",
      "[452]\tvalidation_0-logloss:0.14963\n",
      "[453]\tvalidation_0-logloss:0.14962\n",
      "[454]\tvalidation_0-logloss:0.14961\n",
      "[455]\tvalidation_0-logloss:0.14960\n",
      "[456]\tvalidation_0-logloss:0.14960\n",
      "[457]\tvalidation_0-logloss:0.14958\n",
      "[458]\tvalidation_0-logloss:0.14958\n",
      "[459]\tvalidation_0-logloss:0.14958\n",
      "[460]\tvalidation_0-logloss:0.14957\n",
      "[461]\tvalidation_0-logloss:0.14957\n",
      "[462]\tvalidation_0-logloss:0.14956\n",
      "[463]\tvalidation_0-logloss:0.14955\n",
      "[464]\tvalidation_0-logloss:0.14953\n",
      "[465]\tvalidation_0-logloss:0.14952\n",
      "[466]\tvalidation_0-logloss:0.14951\n",
      "[467]\tvalidation_0-logloss:0.14951\n",
      "[468]\tvalidation_0-logloss:0.14950\n",
      "[469]\tvalidation_0-logloss:0.14948\n",
      "[470]\tvalidation_0-logloss:0.14948\n",
      "[471]\tvalidation_0-logloss:0.14948\n",
      "[472]\tvalidation_0-logloss:0.14947\n",
      "[473]\tvalidation_0-logloss:0.14946\n",
      "[474]\tvalidation_0-logloss:0.14945\n",
      "[475]\tvalidation_0-logloss:0.14945\n",
      "[476]\tvalidation_0-logloss:0.14945\n",
      "[477]\tvalidation_0-logloss:0.14945\n",
      "[478]\tvalidation_0-logloss:0.14945\n",
      "[479]\tvalidation_0-logloss:0.14945\n",
      "[480]\tvalidation_0-logloss:0.14945\n",
      "[481]\tvalidation_0-logloss:0.14945\n",
      "[482]\tvalidation_0-logloss:0.14943\n",
      "[483]\tvalidation_0-logloss:0.14943\n",
      "[484]\tvalidation_0-logloss:0.14942\n",
      "[485]\tvalidation_0-logloss:0.14942\n",
      "[486]\tvalidation_0-logloss:0.14941\n",
      "[487]\tvalidation_0-logloss:0.14940\n",
      "[488]\tvalidation_0-logloss:0.14941\n",
      "[489]\tvalidation_0-logloss:0.14939\n",
      "[490]\tvalidation_0-logloss:0.14939\n",
      "[491]\tvalidation_0-logloss:0.14938\n",
      "[492]\tvalidation_0-logloss:0.14937\n",
      "[493]\tvalidation_0-logloss:0.14937\n",
      "[494]\tvalidation_0-logloss:0.14935\n",
      "[495]\tvalidation_0-logloss:0.14935\n",
      "[496]\tvalidation_0-logloss:0.14934\n",
      "[497]\tvalidation_0-logloss:0.14934\n",
      "[498]\tvalidation_0-logloss:0.14934\n",
      "[499]\tvalidation_0-logloss:0.14932\n",
      "[500]\tvalidation_0-logloss:0.14932\n",
      "[501]\tvalidation_0-logloss:0.14932\n",
      "[502]\tvalidation_0-logloss:0.14931\n",
      "[503]\tvalidation_0-logloss:0.14931\n",
      "[504]\tvalidation_0-logloss:0.14930\n",
      "[505]\tvalidation_0-logloss:0.14930\n",
      "[506]\tvalidation_0-logloss:0.14929\n",
      "[507]\tvalidation_0-logloss:0.14928\n",
      "[508]\tvalidation_0-logloss:0.14927\n",
      "[509]\tvalidation_0-logloss:0.14927\n",
      "[510]\tvalidation_0-logloss:0.14925\n",
      "[511]\tvalidation_0-logloss:0.14926\n",
      "[512]\tvalidation_0-logloss:0.14926\n",
      "[513]\tvalidation_0-logloss:0.14924\n",
      "[514]\tvalidation_0-logloss:0.14924\n",
      "[515]\tvalidation_0-logloss:0.14922\n",
      "[516]\tvalidation_0-logloss:0.14921\n",
      "[517]\tvalidation_0-logloss:0.14920\n",
      "[518]\tvalidation_0-logloss:0.14919\n",
      "[519]\tvalidation_0-logloss:0.14919\n",
      "[520]\tvalidation_0-logloss:0.14919\n",
      "[521]\tvalidation_0-logloss:0.14918\n",
      "[522]\tvalidation_0-logloss:0.14917\n",
      "[523]\tvalidation_0-logloss:0.14915\n",
      "[524]\tvalidation_0-logloss:0.14915\n",
      "[525]\tvalidation_0-logloss:0.14915\n",
      "[526]\tvalidation_0-logloss:0.14915\n",
      "[527]\tvalidation_0-logloss:0.14914\n",
      "[528]\tvalidation_0-logloss:0.14913\n",
      "[529]\tvalidation_0-logloss:0.14913\n",
      "[530]\tvalidation_0-logloss:0.14913\n",
      "[531]\tvalidation_0-logloss:0.14913\n",
      "[532]\tvalidation_0-logloss:0.14911\n",
      "[533]\tvalidation_0-logloss:0.14910\n",
      "[534]\tvalidation_0-logloss:0.14910\n",
      "[535]\tvalidation_0-logloss:0.14909\n",
      "[536]\tvalidation_0-logloss:0.14908\n",
      "[537]\tvalidation_0-logloss:0.14908\n",
      "[538]\tvalidation_0-logloss:0.14906\n",
      "[539]\tvalidation_0-logloss:0.14906\n",
      "[540]\tvalidation_0-logloss:0.14906\n",
      "[541]\tvalidation_0-logloss:0.14904\n",
      "[542]\tvalidation_0-logloss:0.14904\n",
      "[543]\tvalidation_0-logloss:0.14902\n",
      "[544]\tvalidation_0-logloss:0.14902\n",
      "[545]\tvalidation_0-logloss:0.14902\n",
      "[546]\tvalidation_0-logloss:0.14902\n",
      "[547]\tvalidation_0-logloss:0.14902\n",
      "[548]\tvalidation_0-logloss:0.14902\n",
      "[549]\tvalidation_0-logloss:0.14902\n",
      "[550]\tvalidation_0-logloss:0.14901\n",
      "[551]\tvalidation_0-logloss:0.14900\n",
      "[552]\tvalidation_0-logloss:0.14900\n",
      "[553]\tvalidation_0-logloss:0.14900\n",
      "[554]\tvalidation_0-logloss:0.14899\n",
      "[555]\tvalidation_0-logloss:0.14899\n",
      "[556]\tvalidation_0-logloss:0.14899\n",
      "[557]\tvalidation_0-logloss:0.14898\n",
      "[558]\tvalidation_0-logloss:0.14897\n",
      "[559]\tvalidation_0-logloss:0.14897\n",
      "[560]\tvalidation_0-logloss:0.14897\n",
      "[561]\tvalidation_0-logloss:0.14897\n",
      "[562]\tvalidation_0-logloss:0.14897\n",
      "[563]\tvalidation_0-logloss:0.14897\n",
      "[564]\tvalidation_0-logloss:0.14897\n",
      "[565]\tvalidation_0-logloss:0.14896\n",
      "[566]\tvalidation_0-logloss:0.14895\n",
      "[567]\tvalidation_0-logloss:0.14894\n",
      "[568]\tvalidation_0-logloss:0.14892\n",
      "[569]\tvalidation_0-logloss:0.14892\n",
      "[570]\tvalidation_0-logloss:0.14892\n",
      "[571]\tvalidation_0-logloss:0.14890\n",
      "[572]\tvalidation_0-logloss:0.14890\n",
      "[573]\tvalidation_0-logloss:0.14890\n",
      "[574]\tvalidation_0-logloss:0.14891\n",
      "[575]\tvalidation_0-logloss:0.14890\n",
      "[576]\tvalidation_0-logloss:0.14888\n",
      "[577]\tvalidation_0-logloss:0.14888\n",
      "[578]\tvalidation_0-logloss:0.14888\n",
      "[579]\tvalidation_0-logloss:0.14886\n",
      "[580]\tvalidation_0-logloss:0.14886\n",
      "[581]\tvalidation_0-logloss:0.14885\n",
      "[582]\tvalidation_0-logloss:0.14885\n",
      "[583]\tvalidation_0-logloss:0.14884\n",
      "[584]\tvalidation_0-logloss:0.14884\n",
      "[585]\tvalidation_0-logloss:0.14884\n",
      "[586]\tvalidation_0-logloss:0.14883\n",
      "[587]\tvalidation_0-logloss:0.14883\n",
      "[588]\tvalidation_0-logloss:0.14883\n",
      "[589]\tvalidation_0-logloss:0.14882\n",
      "[590]\tvalidation_0-logloss:0.14881\n",
      "[591]\tvalidation_0-logloss:0.14880\n",
      "[592]\tvalidation_0-logloss:0.14879\n",
      "[593]\tvalidation_0-logloss:0.14879\n",
      "[594]\tvalidation_0-logloss:0.14878\n",
      "[595]\tvalidation_0-logloss:0.14878\n",
      "[596]\tvalidation_0-logloss:0.14878\n",
      "[597]\tvalidation_0-logloss:0.14877\n",
      "[598]\tvalidation_0-logloss:0.14877\n",
      "[599]\tvalidation_0-logloss:0.14876\n",
      "[600]\tvalidation_0-logloss:0.14876\n",
      "[601]\tvalidation_0-logloss:0.14875\n",
      "[602]\tvalidation_0-logloss:0.14875\n",
      "[603]\tvalidation_0-logloss:0.14874\n",
      "[604]\tvalidation_0-logloss:0.14874\n",
      "[605]\tvalidation_0-logloss:0.14873\n",
      "[606]\tvalidation_0-logloss:0.14873\n",
      "[607]\tvalidation_0-logloss:0.14872\n",
      "[608]\tvalidation_0-logloss:0.14872\n",
      "[609]\tvalidation_0-logloss:0.14872\n",
      "[610]\tvalidation_0-logloss:0.14872\n",
      "[611]\tvalidation_0-logloss:0.14872\n",
      "[612]\tvalidation_0-logloss:0.14872\n",
      "[613]\tvalidation_0-logloss:0.14871\n",
      "[614]\tvalidation_0-logloss:0.14871\n",
      "[615]\tvalidation_0-logloss:0.14871\n",
      "[616]\tvalidation_0-logloss:0.14871\n",
      "[617]\tvalidation_0-logloss:0.14871\n",
      "[618]\tvalidation_0-logloss:0.14870\n",
      "[619]\tvalidation_0-logloss:0.14870\n",
      "[620]\tvalidation_0-logloss:0.14868\n",
      "[621]\tvalidation_0-logloss:0.14869\n",
      "[622]\tvalidation_0-logloss:0.14868\n",
      "[623]\tvalidation_0-logloss:0.14868\n",
      "[624]\tvalidation_0-logloss:0.14868\n",
      "[625]\tvalidation_0-logloss:0.14868\n",
      "[626]\tvalidation_0-logloss:0.14868\n",
      "[627]\tvalidation_0-logloss:0.14867\n",
      "[628]\tvalidation_0-logloss:0.14868\n",
      "[629]\tvalidation_0-logloss:0.14868\n",
      "[630]\tvalidation_0-logloss:0.14867\n",
      "[631]\tvalidation_0-logloss:0.14867\n",
      "[632]\tvalidation_0-logloss:0.14868\n",
      "[633]\tvalidation_0-logloss:0.14868\n",
      "[634]\tvalidation_0-logloss:0.14868\n",
      "[635]\tvalidation_0-logloss:0.14866\n",
      "[636]\tvalidation_0-logloss:0.14865\n",
      "[637]\tvalidation_0-logloss:0.14865\n",
      "[638]\tvalidation_0-logloss:0.14865\n",
      "[639]\tvalidation_0-logloss:0.14864\n",
      "[640]\tvalidation_0-logloss:0.14864\n",
      "[641]\tvalidation_0-logloss:0.14863\n",
      "[642]\tvalidation_0-logloss:0.14863\n",
      "[643]\tvalidation_0-logloss:0.14862\n",
      "[644]\tvalidation_0-logloss:0.14862\n",
      "[645]\tvalidation_0-logloss:0.14862\n",
      "[646]\tvalidation_0-logloss:0.14862\n",
      "[647]\tvalidation_0-logloss:0.14862\n",
      "[648]\tvalidation_0-logloss:0.14861\n",
      "[649]\tvalidation_0-logloss:0.14860\n",
      "[650]\tvalidation_0-logloss:0.14859\n",
      "[651]\tvalidation_0-logloss:0.14859\n",
      "[652]\tvalidation_0-logloss:0.14859\n",
      "[653]\tvalidation_0-logloss:0.14858\n",
      "[654]\tvalidation_0-logloss:0.14857\n",
      "[655]\tvalidation_0-logloss:0.14858\n",
      "[656]\tvalidation_0-logloss:0.14858\n",
      "[657]\tvalidation_0-logloss:0.14857\n",
      "[658]\tvalidation_0-logloss:0.14857\n",
      "[659]\tvalidation_0-logloss:0.14857\n",
      "[660]\tvalidation_0-logloss:0.14856\n",
      "[661]\tvalidation_0-logloss:0.14857\n",
      "[662]\tvalidation_0-logloss:0.14856\n",
      "[663]\tvalidation_0-logloss:0.14856\n",
      "[664]\tvalidation_0-logloss:0.14856\n",
      "[665]\tvalidation_0-logloss:0.14855\n",
      "[666]\tvalidation_0-logloss:0.14854\n",
      "[667]\tvalidation_0-logloss:0.14854\n",
      "[668]\tvalidation_0-logloss:0.14854\n",
      "[669]\tvalidation_0-logloss:0.14853\n",
      "[670]\tvalidation_0-logloss:0.14853\n",
      "[671]\tvalidation_0-logloss:0.14853\n",
      "[672]\tvalidation_0-logloss:0.14853\n",
      "[673]\tvalidation_0-logloss:0.14853\n",
      "[674]\tvalidation_0-logloss:0.14854\n",
      "[675]\tvalidation_0-logloss:0.14853\n",
      "[676]\tvalidation_0-logloss:0.14852\n",
      "[677]\tvalidation_0-logloss:0.14852\n",
      "[678]\tvalidation_0-logloss:0.14851\n",
      "[679]\tvalidation_0-logloss:0.14851\n",
      "[680]\tvalidation_0-logloss:0.14851\n",
      "[681]\tvalidation_0-logloss:0.14851\n",
      "[682]\tvalidation_0-logloss:0.14851\n",
      "[683]\tvalidation_0-logloss:0.14850\n",
      "[684]\tvalidation_0-logloss:0.14850\n",
      "[685]\tvalidation_0-logloss:0.14849\n",
      "[686]\tvalidation_0-logloss:0.14849\n",
      "[687]\tvalidation_0-logloss:0.14850\n",
      "[688]\tvalidation_0-logloss:0.14850\n",
      "[689]\tvalidation_0-logloss:0.14849\n",
      "[690]\tvalidation_0-logloss:0.14849\n",
      "[691]\tvalidation_0-logloss:0.14848\n",
      "[692]\tvalidation_0-logloss:0.14848\n",
      "[693]\tvalidation_0-logloss:0.14848\n",
      "[694]\tvalidation_0-logloss:0.14848\n",
      "[695]\tvalidation_0-logloss:0.14848\n",
      "[696]\tvalidation_0-logloss:0.14847\n",
      "[697]\tvalidation_0-logloss:0.14847\n",
      "[698]\tvalidation_0-logloss:0.14847\n",
      "[699]\tvalidation_0-logloss:0.14847\n",
      "[700]\tvalidation_0-logloss:0.14847\n",
      "[701]\tvalidation_0-logloss:0.14846\n",
      "[702]\tvalidation_0-logloss:0.14846\n",
      "[703]\tvalidation_0-logloss:0.14846\n",
      "[704]\tvalidation_0-logloss:0.14845\n",
      "[705]\tvalidation_0-logloss:0.14846\n",
      "[706]\tvalidation_0-logloss:0.14846\n",
      "[707]\tvalidation_0-logloss:0.14846\n",
      "[708]\tvalidation_0-logloss:0.14845\n",
      "[709]\tvalidation_0-logloss:0.14846\n",
      "Score:  0.9412224591329069\n",
      "Accuracy Score:  0.9400379057095475\n"
     ]
    }
   ],
   "source": [
    "from xgboost import XGBClassifier\n",
    "\n",
    "xgbc = XGBClassifier(n_estimators=1000, learning_rate=.05, max_depth=3, verbosity=0)\n",
    "xgbc.fit(X_train_preprocessed, y_train, early_stopping_rounds=5, eval_set=[(X_test_preprocessed, y_test)])\n",
    "\n",
    "print('Score: ', xgbc.score(X_train_preprocessed, y_train))\n",
    "\n",
    "predictions = xgbc.predict(X_test_preprocessed)\n",
    "\n",
    "print('Accuracy Score: ', accuracy_score(y_test, predictions))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "96680b6a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-11T22:03:14.550181Z",
     "iopub.status.busy": "2024-11-11T22:03:14.549708Z",
     "iopub.status.idle": "2024-11-11T22:03:14.955953Z",
     "shell.execute_reply": "2024-11-11T22:03:14.954816Z"
    },
    "papermill": {
     "duration": 0.483461,
     "end_time": "2024-11-11T22:03:14.958431",
     "exception": false,
     "start_time": "2024-11-11T22:03:14.474970",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Depression</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>140700</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>140701</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>140702</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>140703</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>140704</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93795</th>\n",
       "      <td>234495</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93796</th>\n",
       "      <td>234496</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93797</th>\n",
       "      <td>234497</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93798</th>\n",
       "      <td>234498</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93799</th>\n",
       "      <td>234499</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>93800 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id  Depression\n",
       "0      140700           0\n",
       "1      140701           0\n",
       "2      140702           0\n",
       "3      140703           1\n",
       "4      140704           0\n",
       "...       ...         ...\n",
       "93795  234495           0\n",
       "93796  234496           1\n",
       "93797  234497           0\n",
       "93798  234498           1\n",
       "93799  234499           0\n",
       "\n",
       "[93800 rows x 2 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sublesson = pd.DataFrame()\n",
    "sublesson['id'] = test.id\n",
    "\n",
    "predictions = xgbc.predict(test_preprocessed)\n",
    "\n",
    "sublesson['Depression'] = predictions\n",
    "sublesson.to_csv('PS_S4E11.csv', index=False)\n",
    "\n",
    "sublesson"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46b896ce",
   "metadata": {
    "papermill": {
     "duration": 0.073585,
     "end_time": "2024-11-11T22:03:15.106007",
     "exception": false,
     "start_time": "2024-11-11T22:03:15.032422",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Public Score: .91513"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3288e53",
   "metadata": {
    "papermill": {
     "duration": 0.073135,
     "end_time": "2024-11-11T22:03:15.252312",
     "exception": false,
     "start_time": "2024-11-11T22:03:15.179177",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Currently trying to improve my XGBoost score since I know that this is supposed to have advantages over other models...\n",
    "Best Public Score: .92401"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 10008389,
     "sourceId": 84895,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 26.582067,
   "end_time": "2024-11-11T22:03:16.048933",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-11-11T22:02:49.466866",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
